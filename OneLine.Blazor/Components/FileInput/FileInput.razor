@inherits FileInputBase
@namespace OneLine.Blazor.Components
@using OneLine.Models
@using OneLine.Extensions
@if (!Hidden)
{
    <CascadingValue Value="this">
        @DropZoneInlineStyle
        <div class="@(PreventAdding ? "" : DropClass)" style="@(PreventAdding ? "" : "cursor: pointer")" @onclick=OpenDeviceFileSystem @ref=DropTarget @ondragenter=OnDragEnter @ondrop=OnDrop @ondragleave=OnDragLeave>
            @DropZoneText
            @if (BlobDatas.IsNotNullAndNotEmpty())
            {
                <br class="p-0" />
            }
            @foreach (var BlobData in BlobDatas ?? Enumerable.Empty<BlobData>())
            {
                var localBlobData = BlobData;
                <BSButton Color="Color.Link">
                    <span @onclick:stopPropagation @onclick=@(async () => await Download(localBlobData)) title="@Resourcer.GetString("Download")">@localBlobData.Name</span>
                    <span class="text-danger" @onclick:stopPropagation @onclick=@(() => Remove(localBlobData)) style="cursor: pointer" title="@Resourcer.GetString("Delete")">&times;</span>
                </BSButton>
            }
            @foreach (var UserBlob in UserBlobs ?? Enumerable.Empty<UserBlobs>())
            {
                var localUserBlob = UserBlob;
                <BSButton Color="Color.Link">
                    <span @onclick:stopPropagation @onclick=@(async () => await Download(localUserBlob)) title="@Resourcer.GetString("Download")">@localUserBlob.Name</span>
                    @if (!HideDeleteButton)
                    {
                        <span class="text-danger" @onclick:stopPropagation @onclick=@(() => Remove(localUserBlob)) style="cursor: pointer" title="@Resourcer.GetString("Delete")">&times;</span>
                    }
                </BSButton>
            }
        </div>
        @if (!HideResetButton)
        {
            <BSButton OnClick=Clear Color=Color.Secondary>@ResetButtonText</BSButton>
        }
        @if (IsMultiple)
        {
            <input type="file" class="d-none" @ref=DropTargetInput @attributes=UnknownParameters @onchange=OnInputChange multiple />
        }
        else
        {
            <input type="file" class="d-none" @ref=DropTargetInput @attributes=UnknownParameters @onchange=OnInputChange />
        }
    </CascadingValue>
}