<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>OneLine BlazorStrap Card View</Title>
      <Author>Anthony G. Rivera Cosme</Author>
      <Description>Generates a startup blazorstrap index data view using OneLine framework.</Description>
      <Shortcut>OneLineBlazorStrapIndexView</Shortcut>
    </Header>
    <Snippet>
      <Code Language="CSharp">
        <![CDATA[@using $RootNamespace$.Models
@using $RootNamespace$.Services
@using $RootNamespace$.Validations
@using $RootNamespace$.Extensions
@using OneLine.Models
@using OneLine.Validations
@inherits $DataViewComponentModel$
@page "/$ComponentRouteUrl$"
@page "/$ComponentRouteUrl$/{RecordId}"
@code{      
    protected override void OnInitialized()
    {
        AuthorizedRoles = new string[] { };
        base.OnInitialized();
    }
}
@if (User.IsAuthorized() && !Hide)
{
    @if (!ShowForm)
    {
        <div class="page">
            <NavMenu BackButtonClick=OnAfterCancel></NavMenu>
            <div class="page-content h-50">
                <div class="background">
                </div>
                <div class="row mx-0 h-100 justify-content-center">
                    <div class="col-10 col-md-8 col-lg-10 my-3 mx-auto text-center align-self-center">
                        <h2 class="text-primary mb-2">@ResourceManagerLocalizer["$ComponentTitle$"]</h2>
                        <br>
                        <div class="login-input-content">
                            <BSFormGroup Class=@(Device.IsDesktop ? "text-right mb-4" : "text-center mb-4")>
                                @if (!HideCancelOrBackButton)
                                {
                                    <BSButton Color="BlazorStrap.Color.Secondary" OnClick=@OnBeforeCancel>@(!string.IsNullOrWhiteSpace(RedirectUrlAfterSave) ? ResourceManagerLocalizer["Back"] : ResourceManagerLocalizer["Cancel"])</BSButton>
                                }
                                @if (!HideCreateOrNewButton)
                                {
                                    <BSButton Color="BlazorStrap.Color.Primary" OnClick=@(async () => await ShowFormChangeFormState(OneLine.Enums.FormState.Create))>@ResourceManagerLocalizer["Create"]</BSButton>
                                }
                                @if (!string.IsNullOrWhiteSpace(RedirectUrlAfterSave))
                                {
                                    if (MinimumRecordsSelectionsReached)
                                    {
                                        <BSButton ButtonType="ButtonType.Submit" Color="BlazorStrap.Color.Primary">@ResourceManagerLocalizer["Next"]</BSButton>
                                    }
                                }
                            </BSFormGroup>
                            @if (Device.IsDesktop)
                            {
                                <$TableComponent$ InitialAutoSearch=true
                                                              SearchPaging=@(new SearchPaging(0, 5, false, nameof($Model$.$ModelIdentifierPropertyName$)))
                                                              Paging=@(new Paging(0, 5, false, nameof($Model$.$ModelIdentifierPropertyName$)))
                                                              AfterSelectedRecord=@(() => { ShowOptionsDialog = true; StateHasChanged(); })
                                                              @bind-SelectedRecord=SelectedRecord
                                                              @bind-SelectedRecords=SelectedRecords
                                                              @bind-MinimumRecordsSelectionsReached=MinimumRecordsSelectionsReached
                                                              @bind-MaximumRecordsSelectionsReached=MaximumRecordsSelectionsReached
                                                              @bind-TriggerSearch=@TriggerSearchMethod />
                            }
                            else
                            {
                                <$ListComponent$ InitialAutoSearch=true
                                                             SearchPaging=@(new SearchPaging(0, 5, false, nameof($Model$.$ModelIdentifierPropertyName$)))
                                                             Paging=@(new Paging(0, 5, false, nameof($Model$.$ModelIdentifierPropertyName$)))
                                                             AfterSelectedRecord=@(() => { ShowOptionsDialog = true; StateHasChanged(); })
                                                             @bind-SelectedRecord=SelectedRecord
                                                             @bind-SelectedRecords=SelectedRecords
                                                             @bind-MinimumRecordsSelectionsReached=MinimumRecordsSelectionsReached
                                                             @bind-MaximumRecordsSelectionsReached=MaximumRecordsSelectionsReached
                                                             @bind-TriggerSearch=@TriggerSearchMethod />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (ShowForm && !Hidden)
    {
        <$FormComponent$ Identifier=@(new Identifier<string>(SelectedRecord?.$ModelIdentifierPropertyName$)) AutoLoad=true @bind-FormState=FormState Validator=@(new $FormValidator$()) OnAfterCancel=HideFormAfterFormCancel />
    }
    @if (!Hidden)
    {
        <$ModalOptionsComponent$ @bind-SelectedRecord=SelectedRecord
                                         @bind-ShowOptionsDialog=ShowOptionsDialog
                                         @bind-ShowForm=ShowForm
                                         @bind-FormState=FormState
                                         AfterSelectedRecord=@(() => StateHasChanged())
                                         HideDetailsDialogOption=HideDetailsDialogOption
                                         HideCopyDialogOption=@true
                                         HideEditDialogOption=@true
                                         HideDeleteDialogOption=HideDeleteDialogOption />
    }
}
]]>
      </Code>
      <Declarations>
        <Literal>
          <ID>DataViewComponentModel</ID>
          <ToolTip>Enter the view model to inherit in the component.</ToolTip>
          <Default>MyDataViewComponentModel</Default>
        </Literal>
        <Literal>
          <ID>RootNamespace</ID>
          <ToolTip>Enter the application root namespace.</ToolTip>
          <Default>MyNameSpace</Default>
        </Literal>
        <Literal>
          <ID>ComponentRouteUrl</ID>
          <ToolTip>Enter the component route url.</ToolTip>
          <Default>/MyComponentRouteUrl</Default>
        </Literal>
        <Literal>
          <ID>ComponentTitle</ID>
          <ToolTip>Enter the localized component title.</ToolTip>
          <Default>ComponentTitle</Default>
        </Literal>
        <Literal>
          <ID>TableComponent</ID>
          <ToolTip>Enter the name of the table component.</ToolTip>
          <Default>TableComponent</Default>
        </Literal>
        <Literal>
          <ID>ListComponent</ID>
          <ToolTip>Enter the name of the list component.</ToolTip>
          <Default>ListComponent</Default>
        </Literal>
        <Literal>
          <ID>FormComponent</ID>
          <ToolTip>Enter the name of the form component.</ToolTip>
          <Default>FormComponent</Default>
        </Literal>
        <Literal>
          <ID>ModalOptionsComponent</ID>
          <ToolTip>Enter the name of the modal option component.</ToolTip>
          <Default>ModalOptionsComponent</Default>
        </Literal>
        <Literal>
          <ID>Model</ID>
          <ToolTip>Enter the view model.</ToolTip>
          <Default>MyModel</Default>
        </Literal>
        <Literal>
          <ID>ModelIdentifierPropertyName</ID>
          <ToolTip>Enter the model identifier property name.</ToolTip>
          <Default>MyFormTitle</Default>
        </Literal>
        <Literal>
          <ID>FormValidator</ID>
          <ToolTip>Enter the form validator.</ToolTip>
          <Default>MyFormValidator</Default>
        </Literal>
      </Declarations>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>