<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>OneLine BlazorStrap Card View</Title>
      <Author>Anthony G. Rivera Cosme</Author>
      <Description>Generates a startup blazorstrap list data view using OneLine framework.</Description>
      <Shortcut>OneLineBlazorStrapListView</Shortcut>
    </Header>
    <Snippet>
      <Code Language="CSharp">
        <![CDATA[@inherits $DataViewComponentModel$
@code{      
    protected override void OnInitialized()
    {
        AuthorizedRoles = new string[] { };
        base.OnInitialized();
    }
}
@if (!Hide)
{
    <BSForm UserValidation="true" IsInline="true" Model=@SearchPaging Class=@(!Hidden ? "d-flex justify-content-between mb-4" : "d-none")>
        <div class="input-group">
            <BSInput Class="text-center" style="border-bottom-left-radius:25px;border-top-left-radius:25px;" placeholder="@ResourceManagerLocalizer["Search"]" @bind-Value=@SearchPaging.SearchTerm />
            <div class="input-group-append">
                <BSButton style="border-bottom-right-radius: 25px;border-top-right-radius: 25px;" Color=@BlazorStrap.Color.Primary OnClick=@(async () => { Paging.PageIndex = 0; await BeforeSearch(); })>@ResourceManagerLocalizer["Search"]</BSButton>
            </div>
        </div>
    </BSForm>
    @if (Records.IsNotNull() && Records.Any())
    {
        <BSListGroup Class="mb-4" ListGroupType="ListGroupType.Button">
            @foreach (var Record in Records)
            {
                var localRecord = Record;
                <BSListGroupItem OnClick=@(() => { SelectRecord(localRecord); StateHasChanged(); }) Color=@HighlightItem(localRecord, BlazorStrap.Color.Primary, BlazorStrap.Color.None) ListGroupType="ListGroupType.Button">
                    <!--Your data view template goes here-->
                </BSListGroupItem>
            }
        </BSListGroup>
    }
    else if ((Records.IsNull() || !Records.Any()) && ShowActivityIndicator)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <BSAlert Class="text-center font-weight-bold" Color=@BlazorStrap.Color.Info>
            @ResourceManagerLocalizer["NoDataAvailableToDisplay"]
        </BSAlert>
    }
    @if (ResponsePaged.IsNotNull() && ResponsePaged.Response.Data.HasNextPage)
    {
        if (ShowActivityIndicator)
        {
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        }
        else
        {
            <BSFormGroup>
                <BSButton IsBlock=@true Color=@BlazorStrap.Color.Primary OnClick=@LoadMore>@ResourceManagerLocalizer["LoadMore"]</BSButton>
            </BSFormGroup>
        }
    }
    else if (ResponsePaged.IsNotNull() && !ResponsePaged.Response.Data.HasNextPage)
    {
        <BSAlert Class="text-center font-weight-bold" Color=@BlazorStrap.Color.Info>
            @ResourceManagerLocalizer["NoMoreDataAvailableToLoad"]
        </BSAlert>
    }
}
]]>
      </Code>
      <Declarations>
        <Literal>
          <ID>DataViewComponentModel</ID>
          <ToolTip>Enter the view model to inherit in the component.</ToolTip>
          <Default>MyDataViewComponentModel</Default>
        </Literal>
      </Declarations>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>